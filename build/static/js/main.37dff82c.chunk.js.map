{"version":3,"sources":["Components/Todotask.js","Components/Todo.js","App.js","index.js"],"names":["Todotask","props","state","className","type","onClick","moveUp","index","moveDown","onChange","changeHandler","todo","checked","this","id","Value","name","e","handleEditInput","target","value","saveEditedInput","isDone","removeTodo","editTodo","markChecked","Component","Todo","handleChange","setState","inputValue","handleSetNewTodo","todos","filter","length","error","task","uuidv4","editedInputValue","idx","newTodos","elem","someArr","temp","clearAll","clearChecked","clearDone","placeholder","map","React","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37dff82c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { FaTrashAlt } from 'react-icons/fa'\nimport { FaCheck } from 'react-icons/fa'\nimport { MdEdit } from 'react-icons/md'\nimport { GiSaveArrow } from 'react-icons/gi'\nimport { IoIosArrowUp } from 'react-icons/io'\nimport { IoIosArrowDown } from 'react-icons/io'\n\nclass Todotask extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n    return (\n      <li key={this.props.todo.id}>\n        <div className='ctrl-btns'>\n          <button\n            className='btn'\n            type='button'\n            onClick={() => this.props.moveUp(this.props.index)}\n          >\n            <IoIosArrowUp />\n          </button>\n          <button\n            className='btn'\n            type='button'\n            onClick={() => this.props.moveDown(this.props.index)}\n          >\n            <IoIosArrowDown />\n          </button>\n          <input\n            type='checkbox'\n            onChange={() => this.props.changeHandler(this.props.todo)}\n            checked={this.props.todo.checked}\n          />\n          {this.props.todo.id === this.props.state.id ? (\n            <span className='edit-section'>\n              <input\n                className='edit-input'\n                type='text'\n                Value={this.props.todo.name}\n                onChange={(e) => this.props.handleEditInput(e.target.value)}\n              />\n              <button\n                className='btn'\n                type='button'\n                onClick={() =>\n                  this.props.saveEditedInput(this.props.todo, this.props.index)\n                }\n              >\n                <GiSaveArrow />\n              </button>\n            </span>\n          ) : (\n            <span\n              className={`todo-text ${this.props.todo.isDone ? 'checked' : ''}`}\n            >\n              {this.props.todo.name}\n            </span>\n          )}\n        </div>\n        {/* edit logic end */}\n        <div className='ctrl-buttons'>\n          <button\n            className='btn'\n            type='button'\n            onClick={() => this.props.removeTodo(this.props.todo.id)}\n          >\n            <FaTrashAlt />\n          </button>\n          <button\n            className='btn'\n            type='button'\n            onClick={() => this.props.editTodo(this.props.todo.id)}\n          >\n            <MdEdit />\n          </button>\n          <button\n            className='btn'\n            type='button'\n            onClick={() => this.props.markChecked(this.props.todo)}\n          >\n            <FaCheck />\n          </button>\n        </div>\n      </li>\n    )\n  }\n}\n\nexport default Todotask\n","import React from 'react'\nimport { FaPlus } from 'react-icons/fa'\n\nimport { v4 as uuidv4 } from 'uuid'\nimport './Todo.css'\nimport Todotask from './Todotask'\n\nclass Todo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      inputValue: '',\n      todos: [],\n      error: '',\n      id: null,\n      editedInputValue: '',\n    }\n  }\n  handleChange = (value) => {\n    this.setState({ inputValue: value })\n  }\n  handleSetNewTodo = () => {\n    if (this.state.inputValue === '') {\n      this.setState(() => ({\n        error: \"You can't enter empty task\",\n      }))\n      return\n    } else if (\n      this.state.todos.filter((todo) => todo.name === this.state.inputValue)\n        .length > 0\n    ) {\n      this.setState(() => ({\n        error: 'You Already have that Task',\n      }))\n      return\n    }\n    if (this.state.inputValue) {\n      const task = {\n        name: this.state.inputValue,\n        isDone: false,\n        checked: false,\n        id: uuidv4(),\n      }\n\n      this.setState(() => ({\n        todos: [...this.state.todos, task],\n        inputValue: '',\n        error: '',\n      }))\n    }\n  }\n\n  editTodo = (id) => {\n    this.setState(() => ({\n      // editMode: !this.state.editMode,\n      id: id,\n    }))\n  }\n  handleEditInput = (value) => {\n    this.setState(() => ({\n      editedInputValue: value,\n    }))\n  }\n  saveEditedInput = (todo, index) => {\n    if (this.state.editedInputValue === '') {\n      this.setState(() => ({\n        id: -1,\n      }))\n      return\n    }\n    if (\n      this.state.todos.filter(\n        (todo, idx) =>\n          todo.name === this.state.editedInputValue && idx !== index\n      ).length > 0\n    ) {\n      this.setState(() => ({\n        error: 'You already have this task',\n      }))\n      return\n    }\n    todo.name = this.state.editedInputValue\n    this.setState(() => ({\n      id: null,\n      error: '',\n    }))\n  }\n  removeTodo = (id) => {\n    let newTodos = this.state.todos.filter((elem) => elem.id !== id)\n    this.setState(() => ({\n      todos: newTodos,\n    }))\n  }\n  markChecked = (todo) => {\n    todo.isDone = !todo.isDone\n    this.setState(() => ({\n      todos: this.state.todos,\n    }))\n  }\n  moveUp = (index) => {\n    if (index === 0) {\n      return this.setState(() => ({\n        error: 'Theres No More Way Up :)',\n      }))\n    } else {\n      let someArr = [...this.state.todos]\n      let temp = someArr[index]\n      someArr[index] = someArr[index - 1]\n      someArr[index - 1] = temp\n      this.setState(() => ({\n        todos: someArr,\n        error: '',\n      }))\n    }\n  }\n  moveDown = (index) => {\n    let someArr = [...this.state.todos]\n    if (index === someArr.length - 1) {\n      return this.setState(() => ({\n        error: 'Theres No More Way Down :(',\n      }))\n    } else {\n      let temp = someArr[index]\n      someArr[index] = someArr[index + 1]\n      someArr[index + 1] = temp\n      this.setState(() => ({\n        todos: someArr,\n        error: '',\n      }))\n    }\n  }\n  clearAll = () => {\n    if (this.state.todos.length === 0) {\n      return this.setState(() => ({\n        error: 'Everything is already Clear',\n      }))\n    }\n    this.setState(() => ({\n      todos: [],\n      error: '',\n      inputValue: '',\n    }))\n  }\n  clearChecked = () => {\n    let someArr = [...this.state.todos]\n    someArr = someArr.filter((todo) => todo.checked === true)\n    if (someArr.length === 0) {\n      this.setState(() => ({\n        error: 'You didnt ckecked any Tasks',\n      }))\n    }\n    someArr = this.state.todos.filter((todo) => todo.checked === false)\n    this.setState(() => ({\n      todos: someArr,\n    }))\n  }\n  changeHandler = (todo) => {\n    todo.checked = !todo.checked\n    this.setState(() => ({\n      todos: this.state.todos,\n      error: '',\n    }))\n  }\n  clearDone = () => {\n    let someArr = [...this.state.todos]\n    someArr = someArr.filter((todo) => todo.isDone === true)\n    if (someArr.length === 0) {\n      return this.setState(() => ({\n        error: 'You havent done any task yet',\n      }))\n    }\n    someArr = this.state.todos.filter((todo) => todo.isDone === false)\n\n    this.setState(() => ({\n      todos: someArr,\n      error: '',\n    }))\n  }\n  render() {\n    return (\n      <section className='todo-list'>\n        <div className='error'>\n          <div>{this.state.error}</div>\n        </div>\n        <div className='input-container'>\n          <div>\n            <input\n              className='todo-input'\n              type='text'\n              placeholder='Enter your task here'\n              value={this.state.inputValue}\n              onChange={(e) => this.handleChange(e.target.value)}\n            />\n          </div>\n          <div>\n            <button\n              className='submit'\n              type='button'\n              onClick={() => this.handleSetNewTodo()}\n            >\n              <FaPlus />\n            </button>\n          </div>\n        </div>\n        <div className='todo'>\n          {/* Edit Logic */}\n          <ul className='ulist'>\n            {this.state.todos.map((todo, index) => (\n              <Todotask\n                key={todo.id}\n                state={this.state}\n                todo={todo}\n                index={index}\n                moveUp={this.moveUp}\n                moveDown={this.moveDown}\n                changeHandler={this.changeHandler}\n                handleEditInput={this.handleEditInput}\n                saveEditedInput={this.saveEditedInput}\n                removeTodo={this.removeTodo}\n                editTodo={this.editTodo}\n                markChecked={this.markChecked}\n              />\n            ))}\n          </ul>\n        </div>\n        <div className='clear-buttons'>\n          <button\n            className='clear-button'\n            type='button'\n            onClick={this.clearAll}\n          >\n            Clear All\n          </button>\n          <button\n            className='clear-button'\n            type='button'\n            onClick={this.clearChecked}\n          >\n            Clear Checked\n          </button>\n          <button\n            className='clear-button'\n            type='button'\n            onClick={this.clearDone}\n          >\n            Clear Done\n          </button>\n        </div>\n      </section>\n    )\n  }\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Components/Todo'\nimport '../src/Components/Todo.css'\n\nfunction App() {\n  return (\n    <div className='app-container'>\n      <Todo />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}